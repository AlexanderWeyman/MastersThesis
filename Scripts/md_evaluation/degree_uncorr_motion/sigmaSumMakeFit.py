#!/usr/bin/python
"""Fits the slope from files generated by calculateSigmaSumMulticore.py"""

import sys, os.path
import numpy as np
from scipy.optimize import curve_fit

datapoints = 14 #has to be chosen accordingly to the fit range

def fit_function(x, a):
    return a*x

fit_filename = sys.argv[1]


fit_data = np.genfromtxt(fit_filename)[:14]


full_sum_fit = curve_fit(fit_function, fit_data[:,0], fit_data[:,1])
full_sum_fit_values = full_sum_fit[0]
full_sum_fit_errs = np.sqrt(np.diag(full_sum_fit[1]))


ii_sum_fit = curve_fit(fit_function, fit_data[:,0], fit_data[:,2])
ii_sum_fit_values = ii_sum_fit[0]
ii_sum_fit_errs = np.sqrt(np.diag(ii_sum_fit[1]))

A = ii_sum_fit_values[0]
dA = ii_sum_fit_errs[0]
B = full_sum_fit_values[0]
dB = full_sum_fit_errs[0]

degree_of_uncorrelated_motion = A/B
degree_of_uncorrelated_motion_err = 1./B * dA + A/B**2 * dB
print "fit range:\t {0}-{1}".format(fit_data[:,0][0],fit_data[:,0][-1])
print "\n### fit results ################################################"
print "slope_full_sum\t\t=\t{0} \t+- {1}".format(full_sum_fit_values[0], full_sum_fit_errs[0])
print "slope_ii_sum\t\t=\t{0} \t+- {1}".format(ii_sum_fit_values[0], ii_sum_fit_errs[0])
print "deg_uncorr_motion\t=\t{0} \t+- {1}".format(degree_of_uncorrelated_motion, degree_of_uncorrelated_motion_err)
print "################################################################\n"
